{"ast":null,"code":"import { setAppStatusAC } from '../../app/app-reducer';\nconst initialState = {\n  isLoggedIn: false\n};\nexport const authReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'login/SET-IS-LOGGED-IN':\n      return { ...state,\n        isLoggedIn: action.value\n      };\n\n    default:\n      return state;\n  }\n}; // actions\n\nexport const setIsLoggedInAC = value => ({\n  type: 'login/SET-IS-LOGGED-IN',\n  value\n}); // thunks\n\nexport const loginTC = data => dispatch => {\n  dispatch(setAppStatusAC('loading'));\n}; // types","map":{"version":3,"sources":["D:/it-incubator/REACT_TSX - Todolist15/src/features/Login/authReducer.ts"],"names":["setAppStatusAC","initialState","isLoggedIn","authReducer","state","action","type","value","setIsLoggedInAC","loginTC","data","dispatch"],"mappings":"AACA,SAAgCA,cAAhC,QAA8E,uBAA9E;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,UAAU,EAAE;AADK,CAArB;AAKA,OAAO,MAAMC,WAAW,GAAG,CAACC,KAAuB,GAAGH,YAA3B,EAAyCI,MAAzC,KAAmF;AAC1G,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,wBAAL;AACI,aAAO,EAAC,GAAGF,KAAJ;AAAWF,QAAAA,UAAU,EAAEG,MAAM,CAACE;AAA9B,OAAP;;AACJ;AACI,aAAOH,KAAP;AAJR;AAMH,CAPM,C,CASP;;AACA,OAAO,MAAMI,eAAe,GAAID,KAAD,KAAqB;AAACD,EAAAA,IAAI,EAAE,wBAAP;AAAiCC,EAAAA;AAAjC,CAArB,CAAxB,C,CAEP;;AACA,OAAO,MAAME,OAAO,GAAIC,IAAD,IAAgBC,QAAD,IAAqC;AACvEA,EAAAA,QAAQ,CAACX,cAAc,CAAC,SAAD,CAAf,CAAR;AACH,CAFM,C,CAIP","sourcesContent":["import { Dispatch } from 'redux'\r\nimport { SetAppErrorActionType, setAppStatusAC, SetAppStatusActionType } from '../../app/app-reducer'\r\n\r\nconst initialState = {\r\n    isLoggedIn: false\r\n}\r\ntype InitialStateType = typeof initialState\r\n\r\nexport const authReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'login/SET-IS-LOGGED-IN':\r\n            return {...state, isLoggedIn: action.value}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// actions\r\nexport const setIsLoggedInAC = (value: boolean) => ({type: 'login/SET-IS-LOGGED-IN', value} as const)\r\n\r\n// thunks\r\nexport const loginTC = (data: any) => (dispatch: Dispatch<ActionsType>) => {\r\n    dispatch(setAppStatusAC('loading'))\r\n}\r\n\r\n// types\r\ntype ActionsType = ReturnType<typeof setIsLoggedInAC> | SetAppStatusActionType | SetAppErrorActionType"]},"metadata":{},"sourceType":"module"}