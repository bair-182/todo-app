{"ast":null,"code":"var _jsxFileName = \"D:\\\\it-incubator\\\\REACT_TSX - Todolist15\\\\src\\\\features\\\\Login\\\\Login.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Grid from '@mui/material/Grid';\nimport Checkbox from '@mui/material/Checkbox';\nimport FormControl from '@mui/material/FormControl';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport FormGroup from '@mui/material/FormGroup';\nimport FormLabel from '@mui/material/FormLabel';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport { useFormik } from \"formik\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Login = () => {\n  _s();\n\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      password: '',\n      rememberMe: false\n    },\n    validate: values => {\n      const errors = {};\n\n      if (!values.email) {\n        errors.email = 'Required';\n      } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n        errors.email = 'Invalid email address';\n      }\n\n      return errors;\n    },\n    onSubmit: values => {\n      alert(JSON.stringify(values));\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    justifyContent: 'center',\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      justifyContent: 'center',\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: formik.handleSubmit,\n        children: /*#__PURE__*/_jsxDEV(FormControl, {\n          children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"To log in get registered\", /*#__PURE__*/_jsxDEV(\"a\", {\n                href: 'https://social-network.samuraijs.com/',\n                target: '_blank',\n                children: \" here\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"or use common test account credentials:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Email: free@samuraijs.com\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Password: free\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Email\",\n              margin: \"normal\",\n              name: \"email\",\n              onChange: formik.handleChange,\n              value: formik.values.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              type: \"password\",\n              label: \"Password\",\n              margin: \"normal\",\n              name: \"password\",\n              onChange: formik.handleChange,\n              value: formik.values.password\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n              label: 'Remember me',\n              control: /*#__PURE__*/_jsxDEV(Checkbox, {\n                name: \"rememberMe\",\n                onChange: formik.handleChange,\n                checked: formik.values.rememberMe\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 38\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: 'submit',\n              variant: 'contained',\n              color: 'primary',\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 12\n  }, this);\n};\n\n_s(Login, \"B/4rI4IXClQ7sG7psKj+pOuRe5Q=\", false, function () {\n  return [useFormik];\n});\n\n_c = Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["D:/it-incubator/REACT_TSX - Todolist15/src/features/Login/Login.tsx"],"names":["React","Grid","Checkbox","FormControl","FormControlLabel","FormGroup","FormLabel","TextField","Button","useFormik","Login","formik","initialValues","email","password","rememberMe","validate","values","errors","test","onSubmit","alert","JSON","stringify","handleSubmit","handleChange"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport Grid from '@mui/material/Grid';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport FormGroup from '@mui/material/FormGroup';\r\nimport FormLabel from '@mui/material/FormLabel';\r\nimport TextField from '@mui/material/TextField';\r\nimport Button from '@mui/material/Button';\r\nimport {useFormik} from \"formik\";\r\n\r\n\r\n\r\n\r\nexport const Login = () => {\r\n\r\n    type FormikErrorType = {\r\n        email?: string\r\n        password?: string\r\n        rememberMe?: boolean\r\n    }\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: '',\r\n            password: '',\r\n            rememberMe: false\r\n        },\r\n        validate: (values) => {\r\n            const errors: FormikErrorType = {};\r\n            if (!values.email) {\r\n                errors.email = 'Required';\r\n            } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n                errors.email = 'Invalid email address';\r\n            }\r\n            return errors;\r\n        },\r\n        onSubmit: values => {\r\n            alert(JSON.stringify(values));\r\n        },\r\n    })\r\n\r\n\r\n    return <Grid container justifyContent={'center'}>\r\n        <Grid item justifyContent={'center'}>\r\n            <form onSubmit={formik.handleSubmit}>\r\n                <FormControl>\r\n                    <FormLabel>\r\n                        <p>To log in get registered\r\n                            <a href={'https://social-network.samuraijs.com/'}\r\n                               target={'_blank'}> here\r\n                            </a>\r\n                        </p>\r\n                        <p>or use common test account credentials:</p>\r\n                        <p>Email: free@samuraijs.com</p>\r\n                        <p>Password: free</p>\r\n                    </FormLabel>\r\n\r\n                    <FormGroup>\r\n                        <TextField label=\"Email\"\r\n                                   margin=\"normal\"\r\n                                   name=\"email\"\r\n                                   onChange={ formik.handleChange }\r\n                                   value={ formik.values.email}\r\n                        />\r\n                        <TextField type=\"password\"\r\n                                   label=\"Password\"\r\n                                   margin=\"normal\"\r\n                                   name=\"password\"\r\n                                   onChange={ formik.handleChange }\r\n                                   value={ formik.values.password}\r\n                        />\r\n                        <FormControlLabel\r\n                            label={'Remember me'}\r\n                            control={<Checkbox\r\n                                name=\"rememberMe\"\r\n                                onChange={ formik.handleChange }\r\n                                checked={ formik.values.rememberMe }\r\n                            />}/>\r\n                        <Button\r\n                            type={'submit'}\r\n                            variant={'contained'}\r\n                            color={'primary'}>\r\n                            Login\r\n                        </Button>\r\n                    </FormGroup>\r\n\r\n                </FormControl>\r\n            </form>\r\n\r\n        </Grid>\r\n    </Grid>\r\n}\r\n"]},"metadata":{},"sourceType":"module"}