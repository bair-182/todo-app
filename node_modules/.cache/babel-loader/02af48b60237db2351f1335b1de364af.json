{"ast":null,"code":"var _jsxFileName = \"D:\\\\it-incubator\\\\TEMPLATE_REACT_TSX - Copy\\\\src\\\\Todolist.tsx\";\nimport React from 'react';\nimport { AddItemForm } from './AddItemForm';\nimport { EditableSpan } from './EditableSpan';\nimport { Button, Checkbox, IconButton } from '@material-ui/core';\nimport { Delete } from '@material-ui/icons';\nexport function Todolist(props) {\n  const addTask = title => {\n    props.addTask(title, props.id);\n  };\n\n  const removeTodolist = () => {\n    props.removeTodolist(props.id);\n  };\n\n  const changeTodolistTitle = title => {\n    props.changeTodolistTitle(props.id, title);\n  };\n\n  const onAllClickHandler = () => props.changeFilter(\"all\", props.id);\n\n  const onActiveClickHandler = () => props.changeFilter(\"active\", props.id);\n\n  const onCompletedClickHandler = () => props.changeFilter(\"completed\", props.id);\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, \" \", /*#__PURE__*/React.createElement(EditableSpan, {\n    value: props.title,\n    onChange: changeTodolistTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 14\n    }\n  }), /*#__PURE__*/React.createElement(IconButton, {\n    onClick: removeTodolist,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Delete, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(AddItemForm, {\n    addItem: addTask,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, props.tasks.map(t => {\n    const onClickHandler = () => props.removeTask(t.id, props.id);\n\n    const onChangeHandler = e => {\n      let newIsDoneValue = e.currentTarget.checked;\n      props.changeTaskStatus(t.id, newIsDoneValue, props.id);\n    };\n\n    const onTitleChangeHandler = newValue => {\n      props.changeTaskTitle(t.id, newValue, props.id);\n    };\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: t.id,\n      className: t.isDone ? \"is-done\" : \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 28\n      }\n    }, /*#__PURE__*/React.createElement(Checkbox, {\n      checked: t.isDone,\n      color: \"primary\",\n      onChange: onChangeHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(EditableSpan, {\n      value: t.title,\n      onChange: onTitleChangeHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(IconButton, {\n      onClick: onClickHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Delete, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 29\n      }\n    })));\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: props.filter === 'all' ? 'outlined' : 'text',\n    onClick: onAllClickHandler,\n    color: 'default',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }, \"All\"), /*#__PURE__*/React.createElement(Button, {\n    variant: props.filter === 'active' ? 'outlined' : 'text',\n    onClick: onActiveClickHandler,\n    color: 'primary',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }, \"Active\"), /*#__PURE__*/React.createElement(Button, {\n    variant: props.filter === 'completed' ? 'outlined' : 'text',\n    onClick: onCompletedClickHandler,\n    color: 'secondary',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }, \"Completed\")));\n}","map":{"version":3,"sources":["D:/it-incubator/TEMPLATE_REACT_TSX - Copy/src/Todolist.tsx"],"names":["React","AddItemForm","EditableSpan","Button","Checkbox","IconButton","Delete","Todolist","props","addTask","title","id","removeTodolist","changeTodolistTitle","onAllClickHandler","changeFilter","onActiveClickHandler","onCompletedClickHandler","tasks","map","t","onClickHandler","removeTask","onChangeHandler","e","newIsDoneValue","currentTarget","checked","changeTaskStatus","onTitleChangeHandler","newValue","changeTaskTitle","isDone","filter"],"mappings":"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","sourcesContent":["import React, {ChangeEvent} from 'react';\r\nimport {FilterValuesType} from './App';\r\nimport {AddItemForm} from './AddItemForm';\r\nimport {EditableSpan} from './EditableSpan';\r\nimport {Button, Checkbox, IconButton} from '@material-ui/core';\r\nimport {Delete} from '@material-ui/icons';\r\n\r\nexport type TaskType = {\r\n    id: string\r\n    title: string\r\n    isDone: boolean\r\n}\r\n\r\ntype PropsType = {\r\n    id: string\r\n    title: string\r\n    tasks: Array<TaskType>\r\n    removeTask: (taskId: string, todolistId: string) => void\r\n    changeFilter: (value: FilterValuesType, todolistId: string) => void\r\n    addTask: (title: string, todolistId: string) => void\r\n    changeTaskStatus: (id: string, isDone: boolean, todolistId: string) => void\r\n    removeTodolist: (id: string) => void\r\n    changeTodolistTitle: (id: string, newTitle: string) => void\r\n    filter: FilterValuesType\r\n    changeTaskTitle: (taskId: string, newTitle: string, todolistId: string) => void\r\n}\r\n\r\nexport function Todolist(props: PropsType) {\r\n    const addTask = (title: string) => {\r\n        props.addTask(title, props.id);\r\n    }\r\n\r\n    const removeTodolist = () => {\r\n        props.removeTodolist(props.id);\r\n    }\r\n    const changeTodolistTitle = (title: string) => {\r\n        props.changeTodolistTitle(props.id, title);\r\n    }\r\n\r\n    const onAllClickHandler = () => props.changeFilter(\"all\", props.id);\r\n    const onActiveClickHandler = () => props.changeFilter(\"active\", props.id);\r\n    const onCompletedClickHandler = () => props.changeFilter(\"completed\", props.id);\r\n\r\n    return <div>\r\n        <h3> <EditableSpan value={props.title} onChange={changeTodolistTitle} />\r\n            <IconButton onClick={removeTodolist}>\r\n                <Delete />\r\n            </IconButton>\r\n        </h3>\r\n        <AddItemForm addItem={addTask}/>\r\n        <div>\r\n            {\r\n                props.tasks.map(t => {\r\n                    const onClickHandler = () => props.removeTask(t.id, props.id)\r\n                    const onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n                        let newIsDoneValue = e.currentTarget.checked;\r\n                        props.changeTaskStatus(t.id, newIsDoneValue, props.id);\r\n                    }\r\n                    const onTitleChangeHandler = (newValue: string) => {\r\n                        props.changeTaskTitle(t.id, newValue, props.id);\r\n                    }\r\n\r\n\r\n                    return <div key={t.id} className={t.isDone ? \"is-done\" : \"\"}>\r\n                        <Checkbox\r\n                            checked={t.isDone}\r\n                            color=\"primary\"\r\n                            onChange={onChangeHandler}\r\n                        />\r\n\r\n                        <EditableSpan value={t.title} onChange={onTitleChangeHandler} />\r\n                        <IconButton onClick={onClickHandler}>\r\n                            <Delete />\r\n                        </IconButton>\r\n                    </div>\r\n                })\r\n            }\r\n        </div>\r\n        <div>\r\n            <Button variant={props.filter === 'all' ? 'outlined' : 'text'}\r\n                    onClick={onAllClickHandler}\r\n                    color={'default'}\r\n            >All\r\n            </Button>\r\n            <Button variant={props.filter === 'active' ? 'outlined' : 'text'}\r\n                    onClick={onActiveClickHandler}\r\n                    color={'primary'}>Active\r\n            </Button>\r\n            <Button variant={props.filter === 'completed' ? 'outlined' : 'text'}\r\n                    onClick={onCompletedClickHandler}\r\n                    color={'secondary'}>Completed\r\n            </Button>\r\n        </div>\r\n    </div>\r\n}\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}