{"ast":null,"code":"var _jsxFileName = \"D:\\\\it-incubator\\\\REACT_TSX - Todolist15\\\\src\\\\components\\\\AddItemForm\\\\AddItemForm.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport TextField from '@mui/material/TextField';\nimport IconButton from '@mui/material/IconButton';\nimport { AddBox } from '@mui/icons-material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AddItemForm = /*#__PURE__*/React.memo(_c = _s(function (props) {\n  _s();\n\n  console.log('AddItemForm called');\n  let [title, setTitle] = useState('');\n  let [error, setError] = useState(null);\n\n  const addItem = () => {\n    if (title.trim() !== '') {\n      props.addItem(title);\n      setTitle('');\n    } else {\n      setError('Title is required');\n    }\n  };\n\n  const onChangeHandler = e => {\n    setTitle(e.currentTarget.value);\n  };\n\n  const onKeyPressHandler = e => {\n    if (error !== null) {\n      setError(null);\n    }\n\n    if (e.charCode === 13) {\n      addItem();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(TextField, {\n      variant: \"outlined\",\n      error: !!error,\n      value: title,\n      onChange: onChangeHandler,\n      onKeyPress: onKeyPressHandler,\n      label: \"Title\",\n      helperText: error,\n      disabled: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n      color: \"primary\",\n      onClick: addItem,\n      disabled: true,\n      children: /*#__PURE__*/_jsxDEV(AddBox, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 12\n  }, this);\n}, \"8Zwd6flEqgEMffwXPUsgyW+xN34=\"));\n_c2 = AddItemForm;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"AddItemForm$React.memo\");\n$RefreshReg$(_c2, \"AddItemForm\");","map":{"version":3,"sources":["D:/it-incubator/REACT_TSX - Todolist15/src/components/AddItemForm/AddItemForm.tsx"],"names":["React","useState","TextField","IconButton","AddBox","AddItemForm","memo","props","console","log","title","setTitle","error","setError","addItem","trim","onChangeHandler","e","currentTarget","value","onKeyPressHandler","charCode"],"mappings":";;;AAAA,OAAOA,KAAP,IAA4CC,QAA5C,QAA4D,OAA5D;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,SAASC,MAAT,QAAuB,qBAAvB;;AAMA,OAAO,MAAMC,WAAW,gBAAGL,KAAK,CAACM,IAAN,SAAW,UAAUC,KAAV,EAAuC;AAAA;;AACzEC,EAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AAEA,MAAI,CAACC,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,EAAD,CAAhC;AACA,MAAI,CAACW,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAgB,IAAhB,CAAhC;;AAEA,QAAMa,OAAO,GAAG,MAAM;AAClB,QAAIJ,KAAK,CAACK,IAAN,OAAiB,EAArB,EAAyB;AACrBR,MAAAA,KAAK,CAACO,OAAN,CAAcJ,KAAd;AACAC,MAAAA,QAAQ,CAAC,EAAD,CAAR;AACH,KAHD,MAGO;AACHE,MAAAA,QAAQ,CAAC,mBAAD,CAAR;AACH;AACJ,GAPD;;AASA,QAAMG,eAAe,GAAIC,CAAD,IAAsC;AAC1DN,IAAAA,QAAQ,CAACM,CAAC,CAACC,aAAF,CAAgBC,KAAjB,CAAR;AACH,GAFD;;AAIA,QAAMC,iBAAiB,GAAIH,CAAD,IAAwC;AAC9D,QAAIL,KAAK,KAAK,IAAd,EAAoB;AAChBC,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACH;;AACD,QAAII,CAAC,CAACI,QAAF,KAAe,EAAnB,EAAuB;AACnBP,MAAAA,OAAO;AACV;AACJ,GAPD;;AASA,sBAAO;AAAA,4BACH,QAAC,SAAD;AAAW,MAAA,OAAO,EAAC,UAAnB;AACW,MAAA,KAAK,EAAE,CAAC,CAACF,KADpB;AAEW,MAAA,KAAK,EAAEF,KAFlB;AAGW,MAAA,QAAQ,EAAEM,eAHrB;AAIW,MAAA,UAAU,EAAEI,iBAJvB;AAKW,MAAA,KAAK,EAAC,OALjB;AAMW,MAAA,UAAU,EAAER,KANvB;AAOW,MAAA,QAAQ,EAAE;AAPrB;AAAA;AAAA;AAAA;AAAA,YADG,eAUH,QAAC,UAAD;AAAY,MAAA,KAAK,EAAC,SAAlB;AAA4B,MAAA,OAAO,EAAEE,OAArC;AAA8C,MAAA,QAAQ,EAAE,IAAxD;AAAA,6BACI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAVG;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAcH,CA1C0B,kCAApB;MAAMT,W","sourcesContent":["import React, { ChangeEvent, KeyboardEvent, useState } from 'react';\r\nimport TextField from '@mui/material/TextField';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport { AddBox } from '@mui/icons-material';\r\n\r\ntype AddItemFormPropsType = {\r\n    addItem: (title: string) => void\r\n}\r\n\r\nexport const AddItemForm = React.memo(function (props: AddItemFormPropsType) {\r\n    console.log('AddItemForm called')\r\n\r\n    let [title, setTitle] = useState('')\r\n    let [error, setError] = useState<string | null>(null)\r\n\r\n    const addItem = () => {\r\n        if (title.trim() !== '') {\r\n            props.addItem(title);\r\n            setTitle('');\r\n        } else {\r\n            setError('Title is required');\r\n        }\r\n    }\r\n\r\n    const onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setTitle(e.currentTarget.value)\r\n    }\r\n\r\n    const onKeyPressHandler = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        if (error !== null) {\r\n            setError(null);\r\n        }\r\n        if (e.charCode === 13) {\r\n            addItem();\r\n        }\r\n    }\r\n\r\n    return <div>\r\n        <TextField variant=\"outlined\"\r\n                   error={!!error}\r\n                   value={title}\r\n                   onChange={onChangeHandler}\r\n                   onKeyPress={onKeyPressHandler}\r\n                   label=\"Title\"\r\n                   helperText={error}\r\n                   disabled={true}\r\n        />\r\n        <IconButton color=\"primary\" onClick={addItem} disabled={true}>\r\n            <AddBox/>\r\n        </IconButton>\r\n    </div>\r\n})\r\n"]},"metadata":{},"sourceType":"module"}