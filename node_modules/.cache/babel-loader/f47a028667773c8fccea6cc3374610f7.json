{"ast":null,"code":"import { todolistsAPI } from '../../api/todolists-api';\nimport { setAppStatusAC } from '../../app/app-reducer';\nconst initialState = [];\nexport const todolistsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'REMOVE-TODOLIST':\n      return state.filter(tl => tl.id !== action.id);\n\n    case 'ADD-TODOLIST':\n      return [{ ...action.todolist,\n        filter: 'all',\n        entityStatus: 'idle'\n      }, ...state];\n\n    case 'CHANGE-TODOLIST-TITLE':\n      return state.map(tl => tl.id === action.id ? { ...tl,\n        title: action.title\n      } : tl);\n\n    case 'CHANGE-TODOLIST-FILTER':\n      return state.map(tl => tl.id === action.id ? { ...tl,\n        filter: action.filter\n      } : tl);\n\n    case 'CHANGE-TODOLIST-ENTITY-STATUS':\n      return state.map(tl => tl.id === action.id ? { ...tl,\n        entityStatus: action.status\n      } : tl);\n\n    case 'SET-TODOLISTS':\n      return action.todolists.map(tl => ({ ...tl,\n        filter: 'all',\n        entityStatus: 'idle'\n      }));\n\n    default:\n      return state;\n  }\n}; // actions\n\nexport const removeTodolistAC = id => ({\n  type: 'REMOVE-TODOLIST',\n  id\n});\nexport const addTodolistAC = todolist => ({\n  type: 'ADD-TODOLIST',\n  todolist\n});\nexport const changeTodolistTitleAC = (id, title) => ({\n  type: 'CHANGE-TODOLIST-TITLE',\n  id,\n  title\n});\nexport const changeTodolistFilterAC = (id, filter) => ({\n  type: 'CHANGE-TODOLIST-FILTER',\n  id,\n  filter\n});\nexport const changeTodolistEntityStatusAC = (id, status) => ({\n  type: 'CHANGE-TODOLIST-ENTITY-STATUS',\n  id,\n  status\n});\nexport const setTodolistsAC = todolists => ({\n  type: 'SET-TODOLISTS',\n  todolists\n}); // thunks\n\nexport const fetchTodolistsTC = () => {\n  return dispatch => {\n    dispatch(setAppStatusAC('loading'));\n    todolistsAPI.getTodolists().then(res => {\n      dispatch(setTodolistsAC(res.data));\n      dispatch(setAppStatusAC('succeeded'));\n    });\n  };\n};\nexport const removeTodolistTC = todolistId => {\n  return dispatch => {\n    //изменим глобальный статус приложения, чтобы вверху полоса побежала\n    dispatch(setAppStatusAC('loading')); //изменим статус конкретного тудулиста, чтобы он мог задизеблить что надо\n\n    dispatch(changeTodolistEntityStatusAC(todolistId, 'loading'));\n    todolistsAPI.deleteTodolist(todolistId).then(res => {\n      dispatch(removeTodolistAC(todolistId)); //скажем глобально приложению, что асинхронная операция завершена\n\n      dispatch(setAppStatusAC('succeeded'));\n    });\n  };\n};\nexport const addTodolistTC = title => {\n  return dispatch => {\n    dispatch(setAppStatusAC('loading'));\n    todolistsAPI.createTodolist(title).then(res => {\n      dispatch(addTodolistAC(res.data.data.item));\n      dispatch(setAppStatusAC('succeeded'));\n    });\n  };\n};\nexport const changeTodolistTitleTC = (id, title) => {\n  return dispatch => {\n    todolistsAPI.updateTodolist(id, title).then(res => {\n      dispatch(changeTodolistTitleAC(id, title));\n    });\n  };\n}; // types","map":{"version":3,"sources":["D:/it-incubator/REACT_TSX - Todolist15/src/features/TodolistsList/todolists-reducer.ts"],"names":["todolistsAPI","setAppStatusAC","initialState","todolistsReducer","state","action","type","filter","tl","id","todolist","entityStatus","map","title","status","todolists","removeTodolistAC","addTodolistAC","changeTodolistTitleAC","changeTodolistFilterAC","changeTodolistEntityStatusAC","setTodolistsAC","fetchTodolistsTC","dispatch","getTodolists","then","res","data","removeTodolistTC","todolistId","deleteTodolist","addTodolistTC","createTodolist","item","changeTodolistTitleTC","updateTodolist"],"mappings":"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","sourcesContent":["import {todolistsAPI, TodolistType} from '../../api/todolists-api'\r\nimport {Dispatch} from 'redux'\r\nimport {RequestStatusType, setAppStatusAC, SetAppStatusActionType} from '../../app/app-reducer'\r\n\r\nconst initialState: Array<TodolistDomainType> = []\r\n\r\nexport const todolistsReducer = (state: Array<TodolistDomainType> = initialState, action: ActionsType): Array<TodolistDomainType> => {\r\n    switch (action.type) {\r\n        case 'REMOVE-TODOLIST':\r\n            return state.filter(tl => tl.id !== action.id)\r\n        case 'ADD-TODOLIST':\r\n            return [{...action.todolist, filter: 'all', entityStatus: 'idle'}, ...state]\r\n\r\n        case 'CHANGE-TODOLIST-TITLE':\r\n            return state.map(tl => tl.id === action.id ? {...tl, title: action.title} : tl)\r\n        case 'CHANGE-TODOLIST-FILTER':\r\n            return state.map(tl => tl.id === action.id ? {...tl, filter: action.filter} : tl)\r\n        case 'CHANGE-TODOLIST-ENTITY-STATUS':\r\n            return state.map(tl => tl.id === action.id ? {...tl, entityStatus: action.status} : tl)\r\n        case 'SET-TODOLISTS':\r\n            return action.todolists.map(tl => ({...tl, filter: 'all', entityStatus: 'idle'}))\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// actions\r\nexport const removeTodolistAC = (id: string) => ({type: 'REMOVE-TODOLIST', id} as const)\r\nexport const addTodolistAC = (todolist: TodolistType) => ({type: 'ADD-TODOLIST', todolist} as const)\r\nexport const changeTodolistTitleAC = (id: string, title: string) => ({\r\n    type: 'CHANGE-TODOLIST-TITLE',\r\n    id,\r\n    title\r\n} as const)\r\nexport const changeTodolistFilterAC = (id: string, filter: FilterValuesType) => ({\r\n    type: 'CHANGE-TODOLIST-FILTER',\r\n    id,\r\n    filter\r\n} as const)\r\nexport const changeTodolistEntityStatusAC = (id: string, status: RequestStatusType) => ({\r\n    type: 'CHANGE-TODOLIST-ENTITY-STATUS', id, status } as const)\r\nexport const setTodolistsAC = (todolists: Array<TodolistType>) => ({type: 'SET-TODOLISTS', todolists} as const)\r\n\r\n// thunks\r\nexport const fetchTodolistsTC = () => {\r\n    return (dispatch: ThunkDispatch) => {\r\n        dispatch(setAppStatusAC('loading'))\r\n        todolistsAPI.getTodolists()\r\n            .then((res) => {\r\n                dispatch(setTodolistsAC(res.data))\r\n                dispatch(setAppStatusAC('succeeded'))\r\n            })\r\n    }\r\n}\r\nexport const removeTodolistTC = (todolistId: string) => {\r\n    return (dispatch: ThunkDispatch) => {\r\n        //изменим глобальный статус приложения, чтобы вверху полоса побежала\r\n        dispatch(setAppStatusAC('loading'))\r\n        //изменим статус конкретного тудулиста, чтобы он мог задизеблить что надо\r\n        dispatch(changeTodolistEntityStatusAC(todolistId, 'loading'))\r\n        todolistsAPI.deleteTodolist(todolistId)\r\n            .then((res) => {\r\n                dispatch(removeTodolistAC(todolistId))\r\n                //скажем глобально приложению, что асинхронная операция завершена\r\n                dispatch(setAppStatusAC('succeeded'))\r\n            })\r\n    }\r\n}\r\nexport const addTodolistTC = (title: string) => {\r\n    return (dispatch: ThunkDispatch) => {\r\n        dispatch(setAppStatusAC('loading'))\r\n        todolistsAPI.createTodolist(title)\r\n            .then((res) => {\r\n                dispatch(addTodolistAC(res.data.data.item))\r\n                dispatch(setAppStatusAC('succeeded'))\r\n            })\r\n    }\r\n}\r\nexport const changeTodolistTitleTC = (id: string, title: string) => {\r\n    return (dispatch: Dispatch<ActionsType>) => {\r\n        todolistsAPI.updateTodolist(id, title)\r\n            .then((res) => {\r\n                dispatch(changeTodolistTitleAC(id, title))\r\n            })\r\n    }\r\n}\r\n\r\n// types\r\nexport type AddTodolistActionType = ReturnType<typeof addTodolistAC>;\r\nexport type RemoveTodolistActionType = ReturnType<typeof removeTodolistAC>;\r\nexport type SetTodolistsActionType = ReturnType<typeof setTodolistsAC>;\r\ntype ActionsType =\r\n    | RemoveTodolistActionType\r\n    | AddTodolistActionType\r\n    | ReturnType<typeof changeTodolistTitleAC>\r\n    | ReturnType<typeof changeTodolistFilterAC>\r\n    | SetTodolistsActionType\r\n    | ReturnType<typeof changeTodolistEntityStatusAC>\r\nexport type FilterValuesType = 'all' | 'active' | 'completed';\r\nexport type TodolistDomainType = TodolistType & {\r\n    filter: FilterValuesType\r\n    entityStatus: RequestStatusType\r\n}\r\ntype ThunkDispatch = Dispatch<ActionsType | SetAppStatusActionType>\r\n"]},"metadata":{},"sourceType":"module"}