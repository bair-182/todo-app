{"ast":null,"code":"import axios from 'axios';\nconst instance = axios.create({\n  baseURL: 'https://social-network.samuraijs.com/api/1.1/',\n  withCredentials: true,\n  headers: {\n    'API-KEY': ''\n  }\n}); // api\n\nexport const todolistsAPI = {\n  getTodolists() {\n    return instance.get('todo-lists');\n  },\n\n  createTodolist(title) {\n    return instance.post('todo-lists', {\n      title\n    });\n  },\n\n  deleteTodolist(id) {\n    return instance.delete(`todo-lists/${id}`);\n  },\n\n  updateTodolist(id, title) {\n    return instance.put(`todo-lists/${id}`, {\n      title\n    });\n  },\n\n  getTasks(todolistId) {\n    return instance.get(`todo-lists/${todolistId}/tasks`);\n  },\n\n  deleteTask(todolistId, taskId) {\n    return instance.delete(`todo-lists/${todolistId}/tasks/${taskId}`);\n  },\n\n  createTask(todolistId, title) {\n    return instance.post(`todo-lists/${todolistId}/tasks`, {\n      title\n    });\n  },\n\n  updateTask(todolistId, taskId, model) {\n    return instance.put(`todo-lists/${todolistId}/tasks/${taskId}`, model);\n  }\n\n}; // types\n\nexport let TaskStatuses;\n\n(function (TaskStatuses) {\n  TaskStatuses[TaskStatuses[\"New\"] = 0] = \"New\";\n  TaskStatuses[TaskStatuses[\"InProgress\"] = 1] = \"InProgress\";\n  TaskStatuses[TaskStatuses[\"Completed\"] = 2] = \"Completed\";\n  TaskStatuses[TaskStatuses[\"Draft\"] = 3] = \"Draft\";\n})(TaskStatuses || (TaskStatuses = {}));\n\nexport let TaskPriorities;\n\n(function (TaskPriorities) {\n  TaskPriorities[TaskPriorities[\"Low\"] = 0] = \"Low\";\n  TaskPriorities[TaskPriorities[\"Middle\"] = 1] = \"Middle\";\n  TaskPriorities[TaskPriorities[\"Hi\"] = 2] = \"Hi\";\n  TaskPriorities[TaskPriorities[\"Urgently\"] = 3] = \"Urgently\";\n  TaskPriorities[TaskPriorities[\"Later\"] = 4] = \"Later\";\n})(TaskPriorities || (TaskPriorities = {}));","map":{"version":3,"sources":["D:/it-incubator/REACT_TSX - Todolist15/src/api/todolists-api.ts"],"names":["axios","instance","create","baseURL","withCredentials","headers","todolistsAPI","getTodolists","get","createTodolist","title","post","deleteTodolist","id","delete","updateTodolist","put","getTasks","todolistId","deleteTask","taskId","createTask","updateTask","model","TaskStatuses","TaskPriorities"],"mappings":"AAAA,OAAOA,KAAP,MAAqC,OAArC;AAEA,MAAMC,QAAQ,GAAGD,KAAK,CAACE,MAAN,CAAa;AAC1BC,EAAAA,OAAO,EAAE,+CADiB;AAE1BC,EAAAA,eAAe,EAAE,IAFS;AAG1BC,EAAAA,OAAO,EAAE;AACL,eAAW;AADN;AAHiB,CAAb,CAAjB,C,CAQA;;AACA,OAAO,MAAMC,YAAY,GAAG;AACxBC,EAAAA,YAAY,GAAG;AACX,WAAON,QAAQ,CAACO,GAAT,CAA6B,YAA7B,CAAP;AACH,GAHuB;;AAIxBC,EAAAA,cAAc,CAACC,KAAD,EAAgB;AAC1B,WAAOT,QAAQ,CAACU,IAAT,CAAsF,YAAtF,EAAoG;AAACD,MAAAA;AAAD,KAApG,CAAP;AACH,GANuB;;AAOxBE,EAAAA,cAAc,CAACC,EAAD,EAAa;AACvB,WAAOZ,QAAQ,CAACa,MAAT,CAA+B,cAAaD,EAAG,EAA/C,CAAP;AACH,GATuB;;AAUxBE,EAAAA,cAAc,CAACF,EAAD,EAAaH,KAAb,EAA4B;AACtC,WAAOT,QAAQ,CAACe,GAAT,CAA8D,cAAaH,EAAG,EAA9E,EAAiF;AAACH,MAAAA;AAAD,KAAjF,CAAP;AACH,GAZuB;;AAaxBO,EAAAA,QAAQ,CAACC,UAAD,EAAqB;AACzB,WAAOjB,QAAQ,CAACO,GAAT,CAAgC,cAAaU,UAAW,QAAxD,CAAP;AACH,GAfuB;;AAgBxBC,EAAAA,UAAU,CAACD,UAAD,EAAqBE,MAArB,EAAqC;AAC3C,WAAOnB,QAAQ,CAACa,MAAT,CAA+B,cAAaI,UAAW,UAASE,MAAO,EAAvE,CAAP;AACH,GAlBuB;;AAmBxBC,EAAAA,UAAU,CAACH,UAAD,EAAqBR,KAArB,EAAoC;AAC1C,WAAOT,QAAQ,CAACU,IAAT,CAAmF,cAAaO,UAAW,QAA3G,EAAoH;AAACR,MAAAA;AAAD,KAApH,CAAP;AACH,GArBuB;;AAsBxBY,EAAAA,UAAU,CAACJ,UAAD,EAAqBE,MAArB,EAAqCG,KAArC,EAAiE;AACvE,WAAOtB,QAAQ,CAACe,GAAT,CAAoF,cAAaE,UAAW,UAASE,MAAO,EAA5H,EAA+HG,KAA/H,CAAP;AACH;;AAxBuB,CAArB,C,CA2BP;;AAeA,WAAYC,YAAZ;;WAAYA,Y;AAAAA,EAAAA,Y,CAAAA,Y;AAAAA,EAAAA,Y,CAAAA,Y;AAAAA,EAAAA,Y,CAAAA,Y;AAAAA,EAAAA,Y,CAAAA,Y;GAAAA,Y,KAAAA,Y;;AAOZ,WAAYC,cAAZ;;WAAYA,c;AAAAA,EAAAA,c,CAAAA,c;AAAAA,EAAAA,c,CAAAA,c;AAAAA,EAAAA,c,CAAAA,c;AAAAA,EAAAA,c,CAAAA,c;AAAAA,EAAAA,c,CAAAA,c;GAAAA,c,KAAAA,c","sourcesContent":["import axios, { AxiosResponse } from 'axios'\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.1/',\r\n    withCredentials: true,\r\n    headers: {\r\n        'API-KEY': ''\r\n    }\r\n})\r\n\r\n// api\r\nexport const todolistsAPI = {\r\n    getTodolists() {\r\n        return instance.get<TodolistType[]>('todo-lists');\r\n    },\r\n    createTodolist(title: string) {\r\n        return instance.post<{ title: string }, AxiosResponse<ResponseType<{ item: TodolistType }>>>('todo-lists', {title});\r\n    },\r\n    deleteTodolist(id: string) {\r\n        return instance.delete<ResponseType>(`todo-lists/${id}`);\r\n    },\r\n    updateTodolist(id: string, title: string) {\r\n        return instance.put<{ title: string }, AxiosResponse<ResponseType>>(`todo-lists/${id}`, {title});\r\n    },\r\n    getTasks(todolistId: string) {\r\n        return instance.get<GetTasksResponse>(`todo-lists/${todolistId}/tasks`);\r\n    },\r\n    deleteTask(todolistId: string, taskId: string) {\r\n        return instance.delete<ResponseType>(`todo-lists/${todolistId}/tasks/${taskId}`);\r\n    },\r\n    createTask(todolistId: string, title: string) {\r\n        return instance.post<{ title: string }, AxiosResponse<ResponseType<{ item: TaskType }>>>(`todo-lists/${todolistId}/tasks`, {title});\r\n    },\r\n    updateTask(todolistId: string, taskId: string, model: UpdateTaskModelType) {\r\n        return instance.put<UpdateTaskModelType, AxiosResponse<ResponseType<{ item: TaskType }>>>(`todo-lists/${todolistId}/tasks/${taskId}`, model);\r\n    }\r\n}\r\n\r\n// types\r\nexport type TodolistType = {\r\n    id: string\r\n    title: string\r\n    addedDate: string\r\n    order: number\r\n}\r\nexport type ResponseType<D = {}> = {\r\n    resultCode: number\r\n    messages: Array<string>\r\n    fieldsErrors: Array<string>\r\n    data: D\r\n}\r\n\r\n\r\nexport enum TaskStatuses {\r\n    New = 0,\r\n    InProgress = 1,\r\n    Completed = 2,\r\n    Draft = 3\r\n}\r\n\r\nexport enum TaskPriorities {\r\n    Low = 0,\r\n    Middle = 1,\r\n    Hi = 2,\r\n    Urgently = 3,\r\n    Later = 4\r\n}\r\n\r\nexport type TaskType = {\r\n    description: string\r\n    title: string\r\n    status: TaskStatuses\r\n    priority: TaskPriorities\r\n    startDate: string\r\n    deadline: string\r\n    id: string\r\n    todoListId: string\r\n    order: number\r\n    addedDate: string\r\n}\r\nexport type UpdateTaskModelType = {\r\n    title: string\r\n    description: string\r\n    status: TaskStatuses\r\n    priority: TaskPriorities\r\n    startDate: string\r\n    deadline: string\r\n}\r\ntype GetTasksResponse = {\r\n    error: string | null\r\n    totalCount: number\r\n    items: TaskType[]\r\n}\r\n"]},"metadata":{},"sourceType":"module"}