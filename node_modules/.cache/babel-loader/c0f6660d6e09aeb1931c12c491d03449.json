{"ast":null,"code":"var _jsxFileName = \"D:\\\\it-incubator\\\\REACT_TSX - Todolist15\\\\src\\\\features\\\\TodolistsList\\\\TodolistsList.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addTodolistTC, changeTodolistFilterAC, changeTodolistTitleTC, fetchTodolistsTC, removeTodolistTC } from './todolists-reducer';\nimport { addTaskTC, removeTaskTC, updateTaskTC } from './tasks-reducer';\nimport Grid from '@mui/material/Grid';\nimport Paper from '@mui/material/Paper';\nimport { AddItemForm } from '../../components/AddItemForm/AddItemForm';\nimport { Todolist } from './Todolist/Todolist';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const TodolistsList = ({\n  demo = false\n}) => {\n  _s();\n\n  const todolists = useSelector(state => state.todolists);\n  const tasks = useSelector(state => state.tasks);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (demo) {\n      return;\n    }\n\n    const thunk = fetchTodolistsTC();\n    dispatch(thunk);\n  }, []);\n  const removeTask = useCallback(function (id, todolistId) {\n    const thunk = removeTaskTC(id, todolistId);\n    dispatch(thunk);\n  }, []);\n  const addTask = useCallback(function (title, todolistId) {\n    const thunk = addTaskTC(title, todolistId);\n    dispatch(thunk);\n  }, []);\n  const changeStatus = useCallback(function (id, status, todolistId) {\n    const thunk = updateTaskTC(id, {\n      status\n    }, todolistId);\n    dispatch(thunk);\n  }, []);\n  const changeTaskTitle = useCallback(function (id, newTitle, todolistId) {\n    const thunk = updateTaskTC(id, {\n      title: newTitle\n    }, todolistId);\n    dispatch(thunk);\n  }, []);\n  const changeFilter = useCallback(function (value, todolistId) {\n    const action = changeTodolistFilterAC(todolistId, value);\n    dispatch(action);\n  }, []);\n  const removeTodolist = useCallback(function (id) {\n    const thunk = removeTodolistTC(id);\n    dispatch(thunk);\n  }, []);\n  const changeTodolistTitle = useCallback(function (id, title) {\n    const thunk = changeTodolistTitleTC(id, title);\n    dispatch(thunk);\n  }, []);\n  const addTodolist = useCallback(title => {\n    const thunk = addTodolistTC(title);\n    dispatch(thunk);\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      style: {\n        padding: '20px'\n      },\n      children: /*#__PURE__*/_jsxDEV(AddItemForm, {\n        addItem: addTodolist\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: todolists.map(tl => {\n        let allTodolistTasks = tasks[tl.id];\n        return /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(Paper, {\n            style: {\n              padding: '10px'\n            },\n            children: /*#__PURE__*/_jsxDEV(Todolist, {\n              todolist: tl,\n              tasks: allTodolistTasks,\n              removeTask: removeTask,\n              changeFilter: changeFilter,\n              addTask: addTask,\n              changeTaskStatus: changeStatus,\n              removeTodolist: removeTodolist,\n              changeTaskTitle: changeTaskTitle,\n              changeTodolistTitle: changeTodolistTitle,\n              demo: demo\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 25\n          }, this)\n        }, tl.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 28\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(TodolistsList, \"/Qo1e+60TefDhiDnTh42PUN+DCQ=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n\n_c = TodolistsList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodolistsList\");","map":{"version":3,"sources":["D:/it-incubator/REACT_TSX - Todolist15/src/features/TodolistsList/TodolistsList.tsx"],"names":["React","useCallback","useEffect","useDispatch","useSelector","addTodolistTC","changeTodolistFilterAC","changeTodolistTitleTC","fetchTodolistsTC","removeTodolistTC","addTaskTC","removeTaskTC","updateTaskTC","Grid","Paper","AddItemForm","Todolist","TodolistsList","demo","todolists","state","tasks","dispatch","thunk","removeTask","id","todolistId","addTask","title","changeStatus","status","changeTaskTitle","newTitle","changeFilter","value","action","removeTodolist","changeTodolistTitle","addTodolist","padding","map","tl","allTodolistTasks"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { AppRootStateType } from '../../app/store'\r\nimport {\r\n    addTodolistTC,\r\n    changeTodolistFilterAC,\r\n    changeTodolistTitleTC,\r\n    fetchTodolistsTC,\r\n    FilterValuesType,\r\n    removeTodolistTC,\r\n    TodolistDomainType\r\n} from './todolists-reducer'\r\nimport { addTaskTC, removeTaskTC, TasksStateType, updateTaskTC } from './tasks-reducer'\r\nimport { TaskStatuses } from '../../api/todolists-api'\r\nimport Grid from '@mui/material/Grid';\r\nimport Paper from '@mui/material/Paper';\r\nimport { AddItemForm } from '../../components/AddItemForm/AddItemForm'\r\nimport { Todolist } from './Todolist/Todolist'\r\n\r\ntype PropsType = {\r\n    demo?: boolean\r\n}\r\n\r\nexport const TodolistsList: React.FC<PropsType> = ({demo = false}) => {\r\n    const todolists = useSelector<AppRootStateType, Array<TodolistDomainType>>(state => state.todolists)\r\n    const tasks = useSelector<AppRootStateType, TasksStateType>(state => state.tasks)\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        if (demo) {\r\n            return;\r\n        }\r\n        const thunk = fetchTodolistsTC()\r\n        dispatch(thunk)\r\n    }, [])\r\n\r\n    const removeTask = useCallback(function (id: string, todolistId: string) {\r\n        const thunk = removeTaskTC(id, todolistId)\r\n        dispatch(thunk)\r\n    }, [])\r\n\r\n    const addTask = useCallback(function (title: string, todolistId: string) {\r\n        const thunk = addTaskTC(title, todolistId)\r\n        dispatch(thunk)\r\n    }, [])\r\n\r\n    const changeStatus = useCallback(function (id: string, status: TaskStatuses, todolistId: string) {\r\n        const thunk = updateTaskTC(id, {status}, todolistId)\r\n        dispatch(thunk)\r\n    }, [])\r\n\r\n    const changeTaskTitle = useCallback(function (id: string, newTitle: string, todolistId: string) {\r\n        const thunk = updateTaskTC(id, {title: newTitle}, todolistId)\r\n        dispatch(thunk)\r\n    }, [])\r\n\r\n    const changeFilter = useCallback(function (value: FilterValuesType, todolistId: string) {\r\n        const action = changeTodolistFilterAC(todolistId, value)\r\n        dispatch(action)\r\n    }, [])\r\n\r\n    const removeTodolist = useCallback(function (id: string) {\r\n        const thunk = removeTodolistTC(id)\r\n        dispatch(thunk)\r\n    }, [])\r\n\r\n    const changeTodolistTitle = useCallback(function (id: string, title: string) {\r\n        const thunk = changeTodolistTitleTC(id, title)\r\n        dispatch(thunk)\r\n    }, [])\r\n\r\n    const addTodolist = useCallback((title: string) => {\r\n        const thunk = addTodolistTC(title)\r\n        dispatch(thunk)\r\n    }, [dispatch])\r\n\r\n\r\n    return <>\r\n        <Grid container style={{padding: '20px'}}>\r\n            <AddItemForm addItem={addTodolist}/>\r\n        </Grid>\r\n        <Grid container spacing={3}>\r\n            {\r\n                todolists.map(tl => {\r\n                    let allTodolistTasks = tasks[tl.id]\r\n\r\n                    return <Grid item key={tl.id}>\r\n                        <Paper style={{padding: '10px'}}>\r\n                            <Todolist\r\n                                todolist={tl}\r\n                                tasks={allTodolistTasks}\r\n                                removeTask={removeTask}\r\n                                changeFilter={changeFilter}\r\n                                addTask={addTask}\r\n                                changeTaskStatus={changeStatus}\r\n                                removeTodolist={removeTodolist}\r\n                                changeTaskTitle={changeTaskTitle}\r\n                                changeTodolistTitle={changeTodolistTitle}\r\n                                demo={demo}\r\n                            />\r\n                        </Paper>\r\n                    </Grid>\r\n                })\r\n            }\r\n        </Grid>\r\n    </>\r\n}\r\n"]},"metadata":{},"sourceType":"module"}