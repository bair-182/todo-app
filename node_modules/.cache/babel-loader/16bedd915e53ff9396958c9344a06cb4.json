{"ast":null,"code":"var _jsxFileName = \"D:\\\\it-incubator\\\\REACT_TSX - Todolist15\\\\src\\\\components\\\\EditableSpan\\\\EditableSpan.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport TextField from '@mui/material/TextField';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const EditableSpan = /*#__PURE__*/React.memo(_c = _s(function (props) {\n  _s();\n\n  console.log('EditableSpan called');\n  let [editMode, setEditMode] = useState(false);\n  let [title, setTitle] = useState(props.value);\n\n  const activateEditMode = () => {\n    setEditMode(true);\n    setTitle(props.value);\n  };\n\n  const activateViewMode = () => {\n    setEditMode(false);\n    props.onChange(title);\n  };\n\n  const changeTitle = e => {\n    setTitle(e.currentTarget.value);\n  };\n\n  return editMode ? /*#__PURE__*/_jsxDEV(TextField, {\n    value: title,\n    onChange: changeTitle,\n    autoFocus: true,\n    onBlur: activateViewMode\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 11\n  }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n    onDoubleClick: activateEditMode,\n    children: props.value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 11\n  }, this);\n}, \"QeJF1daIrCh753fIFS8q1vMlE0A=\"));\n_c2 = EditableSpan;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"EditableSpan$React.memo\");\n$RefreshReg$(_c2, \"EditableSpan\");","map":{"version":3,"sources":["D:/it-incubator/REACT_TSX - Todolist15/src/components/EditableSpan/EditableSpan.tsx"],"names":["React","useState","TextField","EditableSpan","memo","props","console","log","editMode","setEditMode","title","setTitle","value","activateEditMode","activateViewMode","onChange","changeTitle","e","currentTarget"],"mappings":";;;AAAA,OAAOA,KAAP,IAA6BC,QAA7B,QAA6C,OAA7C;AACA,OAAOC,SAAP,MAAsB,yBAAtB;;AAOA,OAAO,MAAMC,YAAY,gBAAGH,KAAK,CAACI,IAAN,SAAW,UAAUC,KAAV,EAAwC;AAAA;;AAC3EC,EAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACA,MAAI,CAACC,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,KAAD,CAAtC;AACA,MAAI,CAACS,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAACI,KAAK,CAACO,KAAP,CAAhC;;AAEA,QAAMC,gBAAgB,GAAG,MAAM;AAC3BJ,IAAAA,WAAW,CAAC,IAAD,CAAX;AACAE,IAAAA,QAAQ,CAACN,KAAK,CAACO,KAAP,CAAR;AACH,GAHD;;AAIA,QAAME,gBAAgB,GAAG,MAAM;AAC3BL,IAAAA,WAAW,CAAC,KAAD,CAAX;AACAJ,IAAAA,KAAK,CAACU,QAAN,CAAeL,KAAf;AACH,GAHD;;AAIA,QAAMM,WAAW,GAAIC,CAAD,IAAsC;AACtDN,IAAAA,QAAQ,CAACM,CAAC,CAACC,aAAF,CAAgBN,KAAjB,CAAR;AACH,GAFD;;AAIA,SAAOJ,QAAQ,gBACT,QAAC,SAAD;AAAW,IAAA,KAAK,EAAEE,KAAlB;AAAyB,IAAA,QAAQ,EAAEM,WAAnC;AAAgD,IAAA,SAAS,MAAzD;AAA0D,IAAA,MAAM,EAAEF;AAAlE;AAAA;AAAA;AAAA;AAAA,UADS,gBAET;AAAM,IAAA,aAAa,EAAED,gBAArB;AAAA,cAAwCR,KAAK,CAACO;AAA9C;AAAA;AAAA;AAAA;AAAA,UAFN;AAGH,CApB2B,kCAArB;MAAMT,Y","sourcesContent":["import React, { ChangeEvent, useState } from 'react';\r\nimport TextField from '@mui/material/TextField';\r\n\r\ntype EditableSpanPropsType = {\r\n    value: string\r\n    onChange: (newValue: string) => void\r\n}\r\n\r\nexport const EditableSpan = React.memo(function (props: EditableSpanPropsType) {\r\n    console.log('EditableSpan called');\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [title, setTitle] = useState(props.value);\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n        setTitle(props.value);\r\n    }\r\n    const activateViewMode = () => {\r\n        setEditMode(false);\r\n        props.onChange(title);\r\n    }\r\n    const changeTitle = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setTitle(e.currentTarget.value)\r\n    }\r\n\r\n    return editMode\r\n        ? <TextField value={title} onChange={changeTitle} autoFocus onBlur={activateViewMode}/>\r\n        : <span onDoubleClick={activateEditMode}>{props.value}</span>\r\n});\r\n"]},"metadata":{},"sourceType":"module"}